<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DeleteButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>